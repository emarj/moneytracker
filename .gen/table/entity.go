//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/sqlite"
)

var Entity = newEntityTable("", "entity", "")

type entityTable struct {
	sqlite.Table

	//Columns
	ID         sqlite.ColumnInteger
	Name       sqlite.ColumnString
	IsSystem   sqlite.ColumnInteger
	IsExternal sqlite.ColumnInteger

	AllColumns     sqlite.ColumnList
	MutableColumns sqlite.ColumnList
}

type EntityTable struct {
	entityTable

	EXCLUDED entityTable
}

// AS creates new EntityTable with assigned alias
func (a EntityTable) AS(alias string) *EntityTable {
	return newEntityTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new EntityTable with assigned schema name
func (a EntityTable) FromSchema(schemaName string) *EntityTable {
	return newEntityTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new EntityTable with assigned table prefix
func (a EntityTable) WithPrefix(prefix string) *EntityTable {
	return newEntityTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new EntityTable with assigned table suffix
func (a EntityTable) WithSuffix(suffix string) *EntityTable {
	return newEntityTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newEntityTable(schemaName, tableName, alias string) *EntityTable {
	return &EntityTable{
		entityTable: newEntityTableImpl(schemaName, tableName, alias),
		EXCLUDED:    newEntityTableImpl("", "excluded", ""),
	}
}

func newEntityTableImpl(schemaName, tableName, alias string) entityTable {
	var (
		IDColumn         = sqlite.IntegerColumn("id")
		NameColumn       = sqlite.StringColumn("name")
		IsSystemColumn   = sqlite.IntegerColumn("is_system")
		IsExternalColumn = sqlite.IntegerColumn("is_external")
		allColumns       = sqlite.ColumnList{IDColumn, NameColumn, IsSystemColumn, IsExternalColumn}
		mutableColumns   = sqlite.ColumnList{NameColumn, IsSystemColumn, IsExternalColumn}
	)

	return entityTable{
		Table: sqlite.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:         IDColumn,
		Name:       NameColumn,
		IsSystem:   IsSystemColumn,
		IsExternal: IsExternalColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
