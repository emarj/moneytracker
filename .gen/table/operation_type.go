//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/sqlite"
)

var OperationType = newOperationTypeTable("", "operation_type", "")

type operationTypeTable struct {
	sqlite.Table

	//Columns
	ID   sqlite.ColumnInteger
	Name sqlite.ColumnString

	AllColumns     sqlite.ColumnList
	MutableColumns sqlite.ColumnList
}

type OperationTypeTable struct {
	operationTypeTable

	EXCLUDED operationTypeTable
}

// AS creates new OperationTypeTable with assigned alias
func (a OperationTypeTable) AS(alias string) *OperationTypeTable {
	return newOperationTypeTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new OperationTypeTable with assigned schema name
func (a OperationTypeTable) FromSchema(schemaName string) *OperationTypeTable {
	return newOperationTypeTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new OperationTypeTable with assigned table prefix
func (a OperationTypeTable) WithPrefix(prefix string) *OperationTypeTable {
	return newOperationTypeTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new OperationTypeTable with assigned table suffix
func (a OperationTypeTable) WithSuffix(suffix string) *OperationTypeTable {
	return newOperationTypeTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newOperationTypeTable(schemaName, tableName, alias string) *OperationTypeTable {
	return &OperationTypeTable{
		operationTypeTable: newOperationTypeTableImpl(schemaName, tableName, alias),
		EXCLUDED:           newOperationTypeTableImpl("", "excluded", ""),
	}
}

func newOperationTypeTableImpl(schemaName, tableName, alias string) operationTypeTable {
	var (
		IDColumn       = sqlite.IntegerColumn("id")
		NameColumn     = sqlite.StringColumn("name")
		allColumns     = sqlite.ColumnList{IDColumn, NameColumn}
		mutableColumns = sqlite.ColumnList{NameColumn}
	)

	return operationTypeTable{
		Table: sqlite.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:   IDColumn,
		Name: NameColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
